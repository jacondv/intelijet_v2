syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package api.blk;


/**
 * Aggregation of all clock timestamps on the device.
 * FPGAs do not have an absolute timestamp since they run independently of the
 * system clock. The system clock can change at any time via the respective grpc method
 * or when connected to the internet. FPGA clocks will never reset during a scan.
 */
message TimestampsResponse {
    /** Elapsed time since FPGA was powered on. */
    google.protobuf.Duration main_fpga = 1;
    /** Current time on the head assembly clock. */
    google.protobuf.Duration head_assembly_clock = 2;
    /** System time of the device's operating system. */
    google.protobuf.Timestamp system_time = 3;
}


/**
 * The following operations are used to retrieve timestamps and clock ticks
 * from a BLK device. This can be used to obtain the correspondence between the different timestamps,
 * and convert between FPGA and UTC in every other service.
 */
service Clock {
    /**
     * Get the current time of all clocks on the device.
     * System time is provided in UTC Epoch time.
     * FPGA clocks return duration since power-on (uptime).
     *
     * Authorization Scopes:
     *  - `info`
     */
    rpc GetCurrentDateTime(google.protobuf.Empty) returns (TimestampsResponse);
}
