# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blk_arc_grpc import about_pb2 as blk__arc__grpc_dot_about__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AboutStub(object):
    """*
    Provides hardware, software and manufacture revision information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAPIVersion = channel.unary_unary(
                '/api.blk.About/GetAPIVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.APIVersionResponse.FromString,
                )
        self.GetSoftwareInfo = channel.unary_unary(
                '/api.blk.About/GetSoftwareInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.SoftwareInfoResponse.FromString,
                )
        self.GetHardwareInfo = channel.unary_unary(
                '/api.blk.About/GetHardwareInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.HardwareInfoResponse.FromString,
                )
        self.GetCalibrationInfo = channel.unary_unary(
                '/api.blk.About/GetCalibrationInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.CalibrationInfoResponse.FromString,
                )
        self.GetManufactureInfo = channel.unary_unary(
                '/api.blk.About/GetManufactureInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.ManufactureInfoResponse.FromString,
                )
        self.GetSoftwareCapabilities = channel.unary_unary(
                '/api.blk.About/GetSoftwareCapabilities',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_about__pb2.SoftwareCapabilitiesResponse.FromString,
                )


class AboutServicer(object):
    """*
    Provides hardware, software and manufacture revision information.
    """

    def GetAPIVersion(self, request, context):
        """*
        Returns the gRPC API version.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSoftwareInfo(self, request, context):
        """*
        Returns a map with the versions of all available software components.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHardwareInfo(self, request, context):
        """*
        Returns a map with the versions of the hardware components installed on the device.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCalibrationInfo(self, request, context):
        """*
        Returns a map with the versions of the calibration files on the device.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManufactureInfo(self, request, context):
        """*
        Returns information related to the device manufacturing process, such as the serial number.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSoftwareCapabilities(self, request, context):
        """*
        Returns information related to software capabilities. Certain features
        and GRPC APIs may be introduced and finalized later. In these cases, the
        capabilities map is a way for on-device software to inform connecting
        clients which features are available.

        After a while, availability of certain features becomes implicit in the
        GRPC API version or the On-device software version itself. At this
        point, entries from the capabilities map may be removed.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AboutServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAPIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAPIVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.APIVersionResponse.SerializeToString,
            ),
            'GetSoftwareInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSoftwareInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.SoftwareInfoResponse.SerializeToString,
            ),
            'GetHardwareInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHardwareInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.HardwareInfoResponse.SerializeToString,
            ),
            'GetCalibrationInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCalibrationInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.CalibrationInfoResponse.SerializeToString,
            ),
            'GetManufactureInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManufactureInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.ManufactureInfoResponse.SerializeToString,
            ),
            'GetSoftwareCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSoftwareCapabilities,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_about__pb2.SoftwareCapabilitiesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.blk.About', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class About(object):
    """*
    Provides hardware, software and manufacture revision information.
    """

    @staticmethod
    def GetAPIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetAPIVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.APIVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSoftwareInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetSoftwareInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.SoftwareInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHardwareInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetHardwareInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.HardwareInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCalibrationInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetCalibrationInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.CalibrationInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManufactureInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetManufactureInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.ManufactureInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSoftwareCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.About/GetSoftwareCapabilities',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_about__pb2.SoftwareCapabilitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
