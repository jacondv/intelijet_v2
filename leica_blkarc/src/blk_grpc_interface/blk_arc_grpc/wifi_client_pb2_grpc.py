# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blk_arc_grpc import wifi_client_pb2 as blk__arc__grpc_dot_wifi__client__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class WifiClientStub(object):
    """*
    This service contains the functionality to control the wi-fi client mode. This includes
    connecting the BLK device to wireless networks, listing saved networks, rearranging by priority, etc.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConnectToNewWifiNetwork = channel.unary_unary(
                '/api.blk.WifiClient/ConnectToNewWifiNetwork',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.NewWifiConnectionRequest.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
                )
        self.ConnectToKnownWifiNetwork = channel.unary_unary(
                '/api.blk.WifiClient/ConnectToKnownWifiNetwork',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.KnownWifiConnectionRequest.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
                )
        self.GetKnownWifiNetworks = channel.unary_unary(
                '/api.blk.WifiClient/GetKnownWifiNetworks',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.KnownWifiListResponse.FromString,
                )
        self.ReorderWifiNetworks = channel.unary_unary(
                '/api.blk.WifiClient/ReorderWifiNetworks',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiReorderRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetNetworkAutoconnect = channel.unary_unary(
                '/api.blk.WifiClient/SetNetworkAutoconnect',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiAutoconnectRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ScanWifiNetworks = channel.unary_unary(
                '/api.blk.WifiClient/ScanWifiNetworks',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.ScanWifiNetworksResponse.FromString,
                )
        self.DeleteKnownWifiNetwork = channel.unary_unary(
                '/api.blk.WifiClient/DeleteKnownWifiNetwork',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiDeleteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ClearKnownWifiNetworks = channel.unary_unary(
                '/api.blk.WifiClient/ClearKnownWifiNetworks',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetWifiClientStatus = channel.unary_unary(
                '/api.blk.WifiClient/GetWifiClientStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
                )
        self.GetConnectionHistory = channel.unary_unary(
                '/api.blk.WifiClient/GetConnectionHistory',
                request_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryRequest.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryResponse.FromString,
                )


class WifiClientServicer(object):
    """*
    This service contains the functionality to control the wi-fi client mode. This includes
    connecting the BLK device to wireless networks, listing saved networks, rearranging by priority, etc.
    """

    def ConnectToNewWifiNetwork(self, request, context):
        """*
        Connects the BLK device to the specified network using WPA/WPA2/WPA3.
        If the network was not known, it is saved. This will happen even if the network cannot be joined.
        If the network was already known, it is brought to the top of known networks (i.e. max priority).
        If there is a known network with the same SSID but different password, the password will be updated.
        The connection attempt is limited to 15 seconds. The method may block up to this time.

        Error Codes:
        - gRPC status 8 (RESOURCE_EXHAUSTED): If device is already busy trying to establish a connection. The call can be retried after a few seconds.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectToKnownWifiNetwork(self, request, context):
        """*
        Connects to one of the saved networks manually using the stored key, if there is one.
        If the request is successful, the network will be brought to the top of known networks (i.e. max priority).
        This method will return immediately. Use `GetWifiClientStatus` to verify that the operation succeeded.
        The connection attempt is limited to 15 seconds. The method may block up to this time.

        Error Codes:
        - gRPC status 5 (NOT_FOUND): If the requested network is not in the list of known networks.
        - gRPC status 8 (RESOURCE_EXHAUSTED): If device is already busy trying to establish a connection. The call can be retried after a few seconds.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKnownWifiNetworks(self, request, context):
        """*
        Returns a list of the currently saved wi-fi networks, sorted by priority. Elements with a lower index will have a higher priority.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReorderWifiNetworks(self, request, context):
        """*
        Allows the user to rearrange the priority of the saved networks.
        The list must contain exactly the same items as the output of `GetKnownWifiNetworks`, but can have a different order.
        Elements with a lower index have a higher priority if multiple networks are available.

        Error Codes:
        - gRPC status 9 (FAILED_PRECONDITION): If the list does not contain exactly the same networks saved on the device.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNetworkAutoconnect(self, request, context):
        """*
        Toggle whether a network should be automatically joined or not.

        Error Codes:
        - gRPC status 5 (NOT_FOUND): If the selected network is not in the list of known networks.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanWifiNetworks(self, request, context):
        """*
        Returns a list of nearby wi-fi networks detected in the last scan.
        A scan is performed periodically by the OS and the response includes a sequence number.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKnownWifiNetwork(self, request, context):
        """*
        Deletes a network from the list of currently saved networks.
        If the device is currently connected to the specified network, it will be disconnected first.

        Error Codes:
        - gRPC status 5 (NOT_FOUND): If the selected network is not in the list of known networks.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearKnownWifiNetworks(self, request, context):
        """*
        Clears the list of known wi-fi networks.
        This also disconnects the device from the current network, if he is connected to one.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWifiClientStatus(self, request, context):
        """*
        Returns current information about the wi-fi client mode. Such as current wi-fi network and whether
        it has access to the internet.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectionHistory(self, request, context):
        """*
        Returns the connection history optionally filtered by an SSID.
        Can be used to determine why a recent connection attempt failed.

        Authorization Scopes:
        - `wifi`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WifiClientServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConnectToNewWifiNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectToNewWifiNetwork,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.NewWifiConnectionRequest.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.SerializeToString,
            ),
            'ConnectToKnownWifiNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectToKnownWifiNetwork,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.KnownWifiConnectionRequest.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.SerializeToString,
            ),
            'GetKnownWifiNetworks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKnownWifiNetworks,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.KnownWifiListResponse.SerializeToString,
            ),
            'ReorderWifiNetworks': grpc.unary_unary_rpc_method_handler(
                    servicer.ReorderWifiNetworks,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiReorderRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetNetworkAutoconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNetworkAutoconnect,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiAutoconnectRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ScanWifiNetworks': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanWifiNetworks,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.ScanWifiNetworksResponse.SerializeToString,
            ),
            'DeleteKnownWifiNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKnownWifiNetwork,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiDeleteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ClearKnownWifiNetworks': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearKnownWifiNetworks,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetWifiClientStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWifiClientStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.SerializeToString,
            ),
            'GetConnectionHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectionHistory,
                    request_deserializer=blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryRequest.FromString,
                    response_serializer=blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.blk.WifiClient', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WifiClient(object):
    """*
    This service contains the functionality to control the wi-fi client mode. This includes
    connecting the BLK device to wireless networks, listing saved networks, rearranging by priority, etc.
    """

    @staticmethod
    def ConnectToNewWifiNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/ConnectToNewWifiNetwork',
            blk__arc__grpc_dot_wifi__client__pb2.NewWifiConnectionRequest.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectToKnownWifiNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/ConnectToKnownWifiNetwork',
            blk__arc__grpc_dot_wifi__client__pb2.KnownWifiConnectionRequest.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetKnownWifiNetworks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/GetKnownWifiNetworks',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.KnownWifiListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReorderWifiNetworks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/ReorderWifiNetworks',
            blk__arc__grpc_dot_wifi__client__pb2.WifiReorderRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNetworkAutoconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/SetNetworkAutoconnect',
            blk__arc__grpc_dot_wifi__client__pb2.WifiAutoconnectRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanWifiNetworks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/ScanWifiNetworks',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.ScanWifiNetworksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKnownWifiNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/DeleteKnownWifiNetwork',
            blk__arc__grpc_dot_wifi__client__pb2.WifiDeleteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearKnownWifiNetworks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/ClearKnownWifiNetworks',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWifiClientStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/GetWifiClientStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.WifiClientStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectionHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.WifiClient/GetConnectionHistory',
            blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryRequest.SerializeToString,
            blk__arc__grpc_dot_wifi__client__pb2.WifiConnectionHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
