# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blk_arc_grpc import storage_pb2 as blk__arc__grpc_dot_storage__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class StorageStub(object):
    """*
    Allows the user to retrieve storage information from a BLK device.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDiskStatus = channel.unary_unary(
                '/api.blk.Storage/GetDiskStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=blk__arc__grpc_dot_storage__pb2.DiskStatusResponse.FromString,
                )


class StorageServicer(object):
    """*
    Allows the user to retrieve storage information from a BLK device.
    """

    def GetDiskStatus(self, request, context):
        """*
        Returns the percentage of disk space that is currently free.

        Authorization Scopes:
        - `info`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDiskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiskStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=blk__arc__grpc_dot_storage__pb2.DiskStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.blk.Storage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Storage(object):
    """*
    Allows the user to retrieve storage information from a BLK device.
    """

    @staticmethod
    def GetDiskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.blk.Storage/GetDiskStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            blk__arc__grpc_dot_storage__pb2.DiskStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
